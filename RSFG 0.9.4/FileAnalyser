
#!/usr/bin/bash
echo
echo -n  "Do you want to analyze the output? Y/N "
read z
echo

if [ $z = 'Y' ]; then
	a=$(grep -v '^[[:blank:]]*$'  TempFiles/Sorted.txt)
	echo -e "$a \n" > TempFiles/SortedNB.txt 
	echo > TempFiles/Analysis.txt

	while read p; do
		grep $(head -n1 TempFiles/SortedNB.txt) TempFiles/Sorted.txt > TempFiles/Search.txt # grabs the first word from a, sends the result to Search.txt
		printf '%-4s %s | ' "$(wc -w TempFiles/Search.txt | tr -d 'TempFiles/Search.txt')" >> TempFiles/Analysis.txt # prints the word count of Search.txt, but does not display the file path 
		echo  "$(head -n1 TempFiles/SortedNB.txt)" >> TempFiles/Analysis.txt # prints the first line of Sorted.NB.txt, with no traling newline.
		sed -i '1d' TempFiles/SortedNB.txt # deletes the first line of the file
	done  < TempFiles/Sorted.txt

	sed -i '$ d' TempFiles/Analysis.txt

	echo -e "How do you want to sort the output?\n\n1: Alphabetical\n2: Biggest First\n3: Smallest First\n "
 	read w
	echo
	if [ $w = '1' ]; then

	cat TempFiles/Analysis.txt | uniq > TempFiles/Output.txt
	more TempFiles/Output.txt

	elif [ $w = '2' ]; then

	sort -rn TempFiles/Analysis.txt | uniq > TempFiles/Output.txt
	more TempFiles/Output.txt

	elif [ $w = '3' ]; then

        sort -n TempFiles/Analysis.txt | uniq > TempFiles/Output.txt
        more TempFiles/Output.txt

	else

	echo $w ": Invalid Argument"

	fi
else
	echo 'Goodbye!'
fi
